version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@3.0.0

jobs:
  code-quality:
    docker:
      - image: cimg/php:8.2-browsers  # Imagen oficial actual
    resource_class: small
    
    steps:
      - checkout
      
      # Cache de Composer para acelerar builds
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      
      # Instalar PCOV (más rápido y moderno que Xdebug para coverage)
      - run:
          name: Instalar PCOV para cobertura
          command: |
            echo "Instalando PCOV..."
            sudo pecl install pcov
            sudo docker-php-ext-enable pcov
            echo "pcov.enabled=1" | sudo tee -a /usr/local/etc/php/conf.d/docker-php-ext-pcov.ini
            echo "Verificando instalación:"
            php -m | grep pcov
      
      - run:
          name: Instalar dependencias de Composer
          command: composer install --no-interaction --prefer-dist
      
      # Guardar cache de Composer
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      
      - run:
          name: Crear carpeta para resultados de tests
          command: mkdir -p /home/circleci/project/test-results
      
      # Verificar configuración de PCOV antes de ejecutar tests
      - run:
          name: Verificar configuración PCOV
          command: |
            php -m | grep pcov
            php --version
      
      - run:
          name: Ejecutar PHPUnit con cobertura PCOV
          command: |
            vendor/bin/phpunit \
              --coverage-clover=coverage.xml \
              --coverage-html=coverage \
              --log-junit=/home/circleci/project/test-results/phpunit.xml
      
      - run:
          name: Ejecutar PHPStan y exportar a XML JUnit
          command: |
            vendor/bin/phpstan analyse src/ --error-format=junit > /home/circleci/project/test-results/phpstan.xml || true
      
      - run:
          name: Ejecutar PHPMD y exportar a XML
          command: |
            vendor/bin/phpmd src/ xml cleancode,codesize,controversial,design,naming,unusedcode > /home/circleci/project/test-results/phpmd.xml || true
      
      # Análisis con SonarCloud
      - sonarcloud/scan:
          cache_version: 1
      
      # Almacenar resultados y artefactos
      - store_test_results:
          path: /home/circleci/project/test-results
  
      - store_artifacts:
          path: coverage.xml

workflows:
  test:
    jobs:
      - code-quality